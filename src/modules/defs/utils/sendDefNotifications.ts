import { sendMessageToPlaten } from "../../../utils/sendTelegramMessages.js";
import { IDeficitCalculationResult } from "../models/Defcalc.js";

/**
 * –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ—á–∞—Ç–æ–∫ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤
 */
export const sendDefCalculationStartNotification = async (): Promise<void> => {
  try {
    await sendMessageToPlaten(
      "üîÑ <b>–ü–æ—á–∞—Ç–æ–∫ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤</b>\n\n–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤ –∑–∞–ø—É—â–µ–Ω–æ..."
    );
  } catch (error) {
    console.error("Failed to send start notification to Platen:", error);
    // –ù–µ –≤–∏–∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É, —â–æ–± –Ω–µ –ø–µ—Ä–µ—Ä–∏–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–æ—Ü–µ—Å
  }
};

/**
 * –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤ –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
 * @param result - —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤
 */
export const sendDefCalculationCompleteNotification = async (
  result: IDeficitCalculationResult
): Promise<void> => {
  try {
    const totalDeficits = Object.keys(result).length;

    let message =
      `‚úÖ <b>–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ</b>\n\n` +
      `üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç–∏:</b>\n` +
      `‚Ä¢ –ó–Ω–∞–π–¥–µ–Ω–æ –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤: <b>${totalDeficits}</b>\n` +
      `‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –ë–î\n`;

    if (totalDeficits === 0) {
      message += `\nüéâ <b>–í—ñ–¥–º—ñ–Ω–Ω–æ! –î–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</b>\n–í—Å—ñ –∞—Ä—Ç–∏–∫—É–ª–∏ –≤ –Ω–æ—Ä–º—ñ`;
    } else {
      // –§–æ—Ä–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –¥–µ—Ñ—ñ—Ü–∏—Ç–Ω–∏—Ö –∞—Ä—Ç–∏–∫—É–ª—ñ–≤ –∑ difQuant
      const deficitList = Object.entries(result)
        .map(([artikul, data]) => {
          const difQuant = data.difQuant || 0;
          const quant = data.quant || 0;
          const defLimit = data.defLimit || 0;
          const status =
            difQuant <= 0 ? "üî¥ –ö—Ä–∏—Ç–∏—á–Ω–∏–π –¥–µ—Ñ—ñ—Ü–∏—Ç" : "üü° –õ—ñ–º—ñ—Ç–æ–≤–∞–Ω–∏–π –¥–µ—Ñ—ñ—Ü–∏—Ç";
          return `‚Ä¢ <b>${artikul}</b>: ${difQuant} (${status})\n  ‚îî –ü–æ—Ç–æ—á–Ω–∏–π –∑–∞–ª–∏—à–æ–∫: ${quant}, –õ—ñ–º—ñ—Ç –¥–µ—Ñ—ñ—Ü–∏—Ç—É: ${defLimit}`;
        })
        .join("\n");

      message += `\nüìã <b>–°–ø–∏—Å–æ–∫ –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤:</b>\n${deficitList}`;
    }

    await sendMessageToPlaten(message);
  } catch (error) {
    console.error("Failed to send completion notification to Platen:", error);
    // –ù–µ –≤–∏–∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É, —â–æ–± –Ω–µ –ø–µ—Ä–µ—Ä–∏–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–æ—Ü–µ—Å
  }
};

/**
 * –í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –ø—Ä–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤
 * @param error - –ø–æ–º–∏–ª–∫–∞, —è–∫–∞ —Å—Ç–∞–ª–∞—Å—è
 */
export const sendDefCalculationErrorNotification = async (
  error: unknown
): Promise<void> => {
  try {
    const errorMessage =
      `‚ùå <b>–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤</b>\n\n` +
      `–ü–æ–º–∏–ª–∫–∞: <code>${
        error instanceof Error ? error.message : "–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞"
      }</code>`;

    await sendMessageToPlaten(errorMessage);
  } catch (telegramError) {
    console.error(
      "Failed to send error notification to Platen:",
      telegramError
    );
    // –ù–µ –≤–∏–∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É, —â–æ–± –Ω–µ –ø–µ—Ä–µ—Ä–∏–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–æ—Ü–µ—Å
  }
};
