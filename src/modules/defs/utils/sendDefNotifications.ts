import { sendMessageToPlaten } from "../../../utils/sendTelegramMessages.js";
import { ISharikStocksResult } from "../../poses/utils/getSharikStocks.js";

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ä–∞—Å—á–µ—Ç–∞ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤
 */
export const sendDefCalculationStartNotification = async (): Promise<void> => {
  try {
    await sendMessageToPlaten(
      "üîÑ <b>–ù–∞—á–∞–ª–æ —Ä–∞—Å—á–µ—Ç–∞ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤</b>\n\n–†–∞—Å—á–µ—Ç –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤ –∑–∞–ø—É—â–µ–Ω..."
    );
  } catch (error) {
    console.error("Failed to send start notification to Platen:", error);
    // –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞—Å—á–µ—Ç–∞ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
 * @param result - —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤
 */
export const sendDefCalculationCompleteNotification = async (
  result: ISharikStocksResult
): Promise<void> => {
  try {
    const totalDeficits = Object.keys(result).length;

    let message =
      `‚úÖ <b>–†–∞—Å—á–µ—Ç –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω</b>\n\n` +
      `üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</b>\n` +
      `‚Ä¢ –ù–∞–π–¥–µ–Ω–æ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤: <b>${totalDeficits}</b>\n` +
      `‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î\n`;

    if (totalDeficits === 0) {
      message += `\nüéâ <b>–û—Ç–ª–∏—á–Ω–æ! –î–µ—Ñ–∏—Ü–∏—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</b>\n–í—Å–µ –∞—Ä—Ç–∏–∫—É–ª—ã –≤ –Ω–æ—Ä–º–µ`;
    } else {
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–µ—Ñ–∏—Ü–∏—Ç–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤ —Å difQuant
      const deficitList = Object.entries(result)
        .map(([artikul, data]) => {
          const difQuant = data.difQuant || 0;
          const quant = data.quant || 0;
          const limit = data.limit || 0;
          const status =
            difQuant <= 0 ? "üî¥ –î–µ—Ñ–∏—Ü–∏—Ç" : "üü° –ü—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ –ª–∏–º–∏—Ç—É";
          return `‚Ä¢ <b>${artikul}</b>: ${difQuant} (${status})\n  ‚îî –¢–µ–∫—É—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: ${quant}, –õ–∏–º–∏—Ç: ${limit}`;
        })
        .join("\n");

      message += `\nüìã <b>–°–ø–∏—Å–æ–∫ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤:</b>\n${deficitList}`;
    }

    await sendMessageToPlaten(message);
  } catch (error) {
    console.error("Failed to send completion notification to Platen:", error);
    // –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤
 * @param error - –æ—à–∏–±–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–∏–∑–æ—à–ª–∞
 */
export const sendDefCalculationErrorNotification = async (
  error: unknown
): Promise<void> => {
  try {
    const errorMessage =
      `‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –¥–µ—Ñ–∏—Ü–∏—Ç–æ–≤</b>\n\n` +
      `–û—à–∏–±–∫–∞: <code>${
        error instanceof Error ? error.message : "Unknown error"
      }</code>`;

    await sendMessageToPlaten(errorMessage);
  } catch (telegramError) {
    console.error(
      "Failed to send error notification to Platen:",
      telegramError
    );
    // –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
  }
};
