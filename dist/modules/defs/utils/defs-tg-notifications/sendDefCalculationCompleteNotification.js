import { sendMessageToDefsChat } from "../../../../utils/telegram/sendMessageToDefsChat.js";
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–±–∏–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ —á–∞–Ω–∫–∏
const chunkArray = (array, chunkSize) => {
    const chunks = [];
    for (let i = 0; i < array.length; i += chunkSize) {
        chunks.push(array.slice(i, i + chunkSize));
    }
    return chunks;
};
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–µ—Ñ–∏—Ü–∏—Ç–∞–º–∏
const createDeficitMessage = (deficits, startIndex, totalDeficits) => {
    const endIndex = startIndex + deficits.length - 1;
    const rangeText = `${startIndex + 1}-${endIndex + 1} –∑ ${totalDeficits}`;
    const deficitList = deficits
        .map(([artikul, data]) => {
        const difQuant = data.difQuant || 0;
        const quant = data.quant || 0;
        const defLimit = data.defLimit || 0;
        const status = difQuant <= 0 ? "üî¥" : "üü°";
        return `${status} ${artikul} 
        ‚îî –ó–∞–ø–∞—Å–∏: ${quant}  
        ‚îî –õ—ñ–º—ñ—Ç –¥–µ—Ñ—ñ—Ü–∏—Ç—É: ${defLimit}
        ‚îî –í—ñ—Ç—Ä–∏–Ω–∞: ${difQuant}
        `;
    })
        .join("\n");
    return `üìã –°–ø–∏—Å–æ–∫ –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤ (${rangeText}):
${deficitList}`;
};
export const sendDefCalculationCompleteNotification = async (result) => {
    try {
        const totalDeficits = Object.keys(result).length;
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const headerMessage = `‚úÖ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ \n` +
            `üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏: \n` +
            `‚Ä¢ –ó–Ω–∞–π–¥–µ–Ω–æ –¥–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤: ${totalDeficits}\n`;
        await sendMessageToDefsChat(headerMessage);
        if (totalDeficits === 0) {
            await sendMessageToDefsChat(`üéâ –í—ñ–¥–º—ñ–Ω–Ω–æ! 
        –î–µ—Ñ—ñ—Ü–∏—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
        –í—Å—ñ –∞—Ä—Ç–∏–∫—É–ª–∏ –≤ –Ω–æ—Ä–º—ñ`);
        }
        else {
            // –†–∞–∑–±–∏–≤–∞–µ–º –¥–µ—Ñ–∏—Ü–∏—Ç—ã –Ω–∞ –∫–ª–∞—Å—Ç–µ—Ä—ã –ø–æ 10
            const deficitEntries = Object.entries(result);
            const chunks = chunkArray(deficitEntries, 10);
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –∫–ª–∞—Å—Ç–µ—Ä –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            for (let i = 0; i < chunks.length; i++) {
                const chunk = chunks[i];
                const startIndex = i * 10;
                const message = createDeficitMessage(chunk, startIndex, totalDeficits);
                await sendMessageToDefsChat(message);
                // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (500–º—Å)
                if (i < chunks.length - 1) {
                    await new Promise((resolve) => setTimeout(resolve, 500));
                }
            }
        }
    }
    catch (error) {
        console.error("Failed to send completion notification to Defs Chat:", error);
        // –ù–µ –≤–∏–∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É, —â–æ–± –Ω–µ –ø–µ—Ä–µ—Ä–∏–≤–∞—Ç–∏ –æ—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–æ—Ü–µ—Å
    }
};
